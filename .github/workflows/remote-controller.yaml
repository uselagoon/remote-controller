name: Lagoon Remote Controller Test

on:
  push:
    branches:
      - main
      - re-namespace
  pull_request:
    branches:
      - main
      - main-v1beta2

jobs:
  test-suite:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        kindest_node_version: [v1.25.16]
        harbor: ["1.11.0"]
        lagoon_build_image: ["uselagoon/build-deploy-image:main"]
        experimental: [false]
        include:
          - kindest_node_version: v1.27.13
            harbor: "1.14.3"
            lagoon_build_image: "uselagoon/build-deploy-image:main"
            experimental: false
          - kindest_node_version: v1.29.4
            harbor: "1.14.3"
            lagoon_build_image: "uselagoon/build-deploy-image:main"
            experimental: true
          - kindest_node_version: v1.30.2
            harbor: "1.14.3"
            lagoon_build_image: "uselagoon/build-deploy-image:main"
            experimental: true
    steps:
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 1
      continue-on-error: true
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: "0"
    - name: Set up testing dependencies
      run: sudo apt-get update && sudo apt-get -y install build-essential && sudo apt-get clean
    - name: Setup correct Go version
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Add dependency chart repos
      run: |
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo add harbor https://helm.goharbor.io
        helm repo add lagoon https://uselagoon.github.io/lagoon-charts/
        helm repo add metallb https://metallb.github.io/metallb
        helm repo add jetstack https://charts.jetstack.io

    - name: Install gojq
      if: |
        (contains(github.event.pull_request.labels.*.name, 'needs-testing'))
      run: |
        cd /tmp
        curl -sSLO https://github.com/itchyny/gojq/releases/download/v0.11.1/gojq_v0.11.1_linux_amd64.tar.gz
        tar -xf ./gojq_v0.11.1_linux_amd64.tar.gz
        sudo cp /tmp/gojq_v0.11.1_linux_amd64/gojq /usr/local/bin/jq
        
    - name: Configure node IP in kind-config.yaml
      run: |
        docker network create kind
        LAGOON_KIND_CIDR_BLOCK=$(docker network inspect kind | jq '. [0].IPAM.Config[0].Subnet' | tr -d '"')
        KIND_NODE_IP=$(echo "${LAGOON_KIND_CIDR_BLOCK%???}" | awk -F'.' '{print $1,$2,$3,240}' OFS='.')
        export KIND_NODE_IP
        envsubst < test-resources/test-suite.kind-config.yaml.tpl > test-resources/test-suite.kind-config.yaml

    - name: Create kind cluster
      uses: helm/kind-action@v1.12.0
      with:
        version: v0.24.0
        cluster_name: remote-controller
        node_image: kindest/node:${{ matrix.kindest_node_version }}
        kubectl_version: v1.30.4
        config: test-resources/test-suite.kind-config.yaml
  
    - name: Check node IP matches kind configuration
      run: |
        LAGOON_KIND_CIDR_BLOCK=$(docker network inspect kind | jq '. [0].IPAM.Config[0].Subnet' | tr -d '"')
        NODE_IP=$(echo "${LAGOON_KIND_CIDR_BLOCK%???}" | awk -F'.' '{print $1,$2,$3,240}' OFS='.')
        echo Checking for NODE_IP "$NODE_IP"
        grep "$NODE_IP" test-resources/test-suite.kind-config.yaml

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true
        tags: uselagoon/remote-controller:test-tag

    - name: Run github/test-e2e
      run: |
        make github/test-e2e HARBOR_VERSION=${{matrix.harbor}} OVERRIDE_BUILD_DEPLOY_DIND_IMAGE="${{matrix.lagoon_build_image}}" KIND_NETWORK=kind

  rerun-failed-jobs:
      runs-on: ubuntu-latest
      needs: [ test-suite ]
      if: failure()
      steps:
        - name: Rerun failed jobs in the current workflow
          env:
            GH_TOKEN: ${{ secrets.GH_TOKEN }}
          run: gh run rerun ${{ github.run_id }} --failed